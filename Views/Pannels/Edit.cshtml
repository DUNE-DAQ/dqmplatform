@model DuneDaqMonitoringPlatform.Models.Pannel

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>Pannel</h4>
<hr />
<div class="row">




    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label class="control-label">Data display selection</label>
                <div class="col-md-offset-2 col-md-10">
                    <select id="multiSelector" name="multiSelector" multiple>
                        @{
                            List<DuneDaqMonitoringPlatform.ViewModels.AssignedAnalysisPannel> dataDisplays = ViewBag.DataDisplays;

                            foreach (var dataDisplay in dataDisplays)
                            {
                                @:<option value="@dataDisplay.AnalysisPannelId" @(Html.Raw(dataDisplay.Assigned ? "selected=\"selected\"" : ""))> @dataDisplay.DisplayName </option>
                            }
                        }
                    </select>

                </div>
            </div>
                <div class="form-group">
                    <input type="submit" value="Save" class="btn btn-primary" />
                </div>
            </form>
        </div>
    </div>

    <div>
        <a asp-action="Index">Back to List</a>
    </div>



<script>
    let multiSelector = new vanillaSelectBox("#multiSelector", {
        search: true
    });
</script>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
